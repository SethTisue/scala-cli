(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{112:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var n=a(0),c=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,c=function(e,t){if(null==e)return{};var a,n,c={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}var s=c.a.createContext({}),p=function(e){var t=c.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return c.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},d=c.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(a),d=n,m=u["".concat(o,".").concat(d)]||u[d]||b[d]||r;return a?c.a.createElement(m,i(i({ref:t},s),{},{components:a})):c.a.createElement(m,i({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var s=2;s<r;s++)o[s]=a[s];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},95:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(3),c=a(7),r=(a(0),a(112)),o={title:"Package Scala application as an executable file",sidebar_position:2},i={unversionedId:"cookbooks/scala-package",id:"cookbooks/scala-package",isDocsHomePage:!1,title:"Package Scala application as an executable file",description:"Scala CLI allows you to package your application into a lightweight JAR file, that can be easily run.",source:"@site/docs/cookbooks/scala-package.md",sourceDirName:"cookbooks",slug:"/cookbooks/scala-package",permalink:"/docs/cookbooks/scala-package",editUrl:"https://github.com/Virtuslab/scala-cli/edit/master/website/docs/cookbooks/scala-package.md",version:"current",sidebarPosition:2,frontMatter:{title:"Package Scala application as an executable file",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Picking a Scala version with Scala CLI",permalink:"/docs/cookbooks/scala-versions"},next:{title:"Use scala-cli to run Scala Scripts",permalink:"/docs/cookbooks/scala-scripts"}},l=[{value:"Default format (lightweight launcher)",id:"default-format-lightweight-launcher",children:[]},{value:"Assemblies",id:"assemblies",children:[]}],s={toc:l};function p(e){var t=e.components,a=Object(c.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Scala CLI allows you to package your application into a lightweight JAR file, that can be easily run.\nIt only contains the byte code of your sources, and automatically downloads its dependencies on its first run."),Object(r.b)("p",null,"The following snippet contains a short application to detect the OS:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-scala",metastring:"name:DetectOsApp.scala","name:DetectOsApp.scala":!0},'object DetectOSApp extends App  {\n    def getOperatingSystem(): String = {\n        val os: String = System.getProperty("os.name")\n        os\n    }\n    println(s"os: ${getOperatingSystem()}")\n}\n')),Object(r.b)("h3",{id:"default-format-lightweight-launcher"},"Default format (lightweight launcher)"),Object(r.b)("p",null,"By default, the ",Object(r.b)("inlineCode",{parentName:"p"},"package")," sub-command generates a lightweight JAR."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli package DetectOsApp.scala\n")),Object(r.b)("p",null,"Lightweight JARs require the ",Object(r.b)("inlineCode",{parentName:"p"},"java")," command to be available, and access to internet if dependencies need to be downloaded."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"# Run DetectOsApp on MacOs \n./DetectOsApp\n# os: Mac OS X\n")),Object(r.b)("p",null,"In the previous example, a Lightweight JAR that was built in a MacOs environment could also run on Linux."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"# Run DetectOsApp on Linux \n./DetectOsApp\n# os: Linux\n")),Object(r.b)("p",null,"ScalaCli supports building a Lightweight JARs in MacOS / Linux / Windows environments.\nOnly Jars built on MacOs / Linux are easily portable between this system. The Lightweight JARs built on Windows can only be run on this system."),Object(r.b)("h3",{id:"assemblies"},"Assemblies"),Object(r.b)("p",null,"Passing ",Object(r.b)("inlineCode",{parentName:"p"},"--assembly")," to the ",Object(r.b)("inlineCode",{parentName:"p"},"package"),' sub-command generates so-called "assemblies" or "fat JARs". '),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli package --assembly DetectOsApp.scala\n")),Object(r.b)("p",null,"Assemblies also require the ",Object(r.b)("inlineCode",{parentName:"p"},"java")," command to be available in the ",Object(r.b)("inlineCode",{parentName:"p"},"PATH"),". As all dependencies are packaged into the assembly, nothing gets downloaded upon the first run and no internet access is required."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"# Run DetectOsApp on MacOs \n./DetectOsApp\n# os: Mac OS X\n")))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[915],{3905:function(e,a,n){n.d(a,{Zo:function(){return p},kt:function(){return m}});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),c=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},p=function(e){var a=c(e.components);return t.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,v=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?t.createElement(v,o(o({ref:a},p),{},{components:n})):t.createElement(v,o({ref:a},p))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3891:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var t=n(7462),r=n(3366),i=(n(7294),n(3905)),o={title:"Picking a Scala version with Scala CLI",sidebar_position:1},l=void 0,s={unversionedId:"cookbooks/scala-versions",id:"cookbooks/scala-versions",isDocsHomePage:!1,title:"Picking a Scala version with Scala CLI",description:"Scala cli by default runs latest stable Scala version.",source:"@site/docs/cookbooks/scala-versions.md",sourceDirName:"cookbooks",slug:"/cookbooks/scala-versions",permalink:"/docs/cookbooks/scala-versions",editUrl:"https://github.com/Virtuslab/scala-cli/edit/master/website/docs/cookbooks/scala-versions.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Picking a Scala version with Scala CLI",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Working directory",permalink:"/docs/reference/working-dir"},next:{title:"Package Scala application as an executable file",permalink:"/docs/cookbooks/scala-package"}},c=[],p={toc:c};function u(e){var a=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Scala cli by default runs latest stable Scala version."),(0,i.kt)("p",null,"Here is an universal piece of code that detect Scala version in runtime"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala",metastring:"name:ScalaVersion.scala","name:ScalaVersion.scala":!0},'object ScalaVersion extends App {\n    val props = new java.util.Properties\n    props.load(getClass.getResourceAsStream("/library.properties"))\n    val line = props.getProperty("version.number")\n    val Version = """(\\d\\.\\d+\\.\\d+).*""".r\n    val Version(versionStr) = line\n    println(s"Using Scala version: $versionStr")\n}\n')),(0,i.kt)("p",null,"When run without any version provided:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli ScalaVersion.scala\n")),(0,i.kt)("p",null,"It will run using latest stable release of Scala (3.0.2 by the time of writing this doc.)"),(0,i.kt)("p",null,"Scala version can be also provided from command line using ",(0,i.kt)("inlineCode",{parentName:"p"},"--scala")," (with ",(0,i.kt)("inlineCode",{parentName:"p"},"-S")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"--scala-version")," aliases)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli -S 2.13.5 ScalaVersion.scala\n")),(0,i.kt)("p",null,"In most cases we do not care for a precise Scala version and 'any Scala 2' or ",(0,i.kt)("inlineCode",{parentName:"p"},"2.13")," is good enough for us. "),(0,i.kt)("p",null,"Scala cli accepts version prefixes so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli -S 2 ScalaVersion.scala\n")),(0,i.kt)("p",null,"will result in picking up a latest stable release for Scala 2 (",(0,i.kt)("inlineCode",{parentName:"p"},"2.13.6")," as of when this doc is written) and"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli -S 2.12 ScalaVersion.scala\n")),(0,i.kt)("p",null,"will use latest stable release of ",(0,i.kt)("inlineCode",{parentName:"p"},"2.12")," ",(0,i.kt)("inlineCode",{parentName:"p"},"2.12.15"),"."),(0,i.kt)("p",null,"We can also pin the version of the language within the .scala file with ",(0,i.kt)("inlineCode",{parentName:"p"},"using directives"),". You can read our more how using directives works in documentation and examples."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Using directives syntax is still experimental and may change in future versions of scala-cli"),(0,i.kt)("p",{parentName:"div"},"So when we will have:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-scala",metastring:"name:version.scala","name:version.scala":!0},"// using scala 2.12.5\n\n//rest of the config\n")),(0,i.kt)("p",{parentName:"div"},"and run"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli ScalaVersion.scala version.scala\n")),(0,i.kt)("p",{parentName:"div"},"We will reulst in using ",(0,i.kt)("inlineCode",{parentName:"p"},"2.12.5"),". "),(0,i.kt)("p",{parentName:"div"},"scala-cli is command-line first so any configuration pass to command line will override using directives."),(0,i.kt)("p",{parentName:"div"},"So, running "),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli -S 2.13.5 ScalaVersion.scala version.scala\n")),(0,i.kt)("p",{parentName:"div"},"Will result in using ",(0,i.kt)("inlineCode",{parentName:"p"},"2.13.5")),(0,i.kt)("h1",{parentName:"div",id:"when-should-i-provide-a-full-version-of-scala"},"When should I provide a full version of scala?"),(0,i.kt)("p",{parentName:"div"},"For prototyping, scripting and other use cases that does not require to run code multiple times in the future proving version is not required. "),(0,i.kt)("p",{parentName:"div"},"Scala is source and binary compatible within each major version (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"2.12.x")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"3.1.x"),") so providing version in ",(0,i.kt)("inlineCode",{parentName:"p"},"eopch.major")," form (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"2.12"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"2.13")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"3.1"),") should be perfectly fine for most use cases. When your Scala code contains more advanced features that may be more sensitive for changes in minor version (e.g. from ",(0,i.kt)("inlineCode",{parentName:"p"},"2.13.4")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"2.13.5"),") we recommend using complete Scala version."))))}u.isMDXComponent=!0}}]);
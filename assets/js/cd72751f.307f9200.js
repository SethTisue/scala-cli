"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[340],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7820:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i={title:"IDE support",sidebar_position:10},l=void 0,s={unversionedId:"ide",id:"ide",isDocsHomePage:!1,title:"IDE support",description:"IDE support for sources managed by the Scala CLI is experimental, and limited to",source:"@site/docs/ide.md",sourceDirName:".",slug:"/ide",permalink:"/docs/ide",editUrl:"https://github.com/Virtuslab/scala-cli/edit/master/website/docs/ide.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"IDE support",sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"REPL",permalink:"/docs/repl"},next:{title:"Scala.JS",permalink:"/docs/scala-js"}},p=[{value:"VSCode (BSP)",id:"vscode-bsp",children:[]},{value:"VSCode (custom Metals server)",id:"vscode-custom-metals-server",children:[{value:"Setup",id:"setup",children:[]},{value:"Activating the Scala CLI support",id:"activating-the-scala-cli-support",children:[]}]},{value:"Neovim",id:"neovim",children:[{value:"Setup",id:"setup-1",children:[]}]}],c={toc:p};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"IDE support for sources managed by the Scala CLI is experimental, and limited to\n",(0,o.kt)("a",{parentName:"p",href:"https://scalameta.org/metals/"},"Metals")," with ",(0,o.kt)("a",{parentName:"p",href:"https://scalameta.org/metals/docs/editors/vscode"},"VS\nCode")," or\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/scalameta/nvim-metals"},"Neovim")," for now."),(0,o.kt)("p",null,"Two kind of support co-exist for VSCode:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#vscode-bsp"},"one relying purely on BSP"),", with no automatic reload upon adding new dependencies for now."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#vscode-custom-metals-server"},"one relying on a custom Metals server"),", featuring an import right from VSCode, and having automatic reload support upon adding new dependencies,")),(0,o.kt)("h2",{id:"vscode-bsp"},"VSCode (BSP)"),(0,o.kt)("p",null,"This Scala CLI support should work with any recent version of Metals. In order to\nopen a Scala CLI project in Metals, run the ",(0,o.kt)("inlineCode",{parentName:"p"},"setup-ide")," command first:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli setup-ide .\n")),(0,o.kt)("p",null,"(replace ",(0,o.kt)("inlineCode",{parentName:"p"},".")," with another set of inputs if these are different.) This should create\na file named ",(0,o.kt)("inlineCode",{parentName:"p"},".bsp/scala-cli.json"),"."),(0,o.kt)("p",null,"Then open the directory where you ran the ",(0,o.kt)("inlineCode",{parentName:"p"},"setup-ide")," command in VSCode. Provided\nthe current directory doesn't also contain an sbt or Mill project, the Scala CLI\nproject should be automatically detected by Metals, and most Metals features (code\nnavigation, diagnostics in editor, etc.) should work."),(0,o.kt)("p",null,"If you add dependencies (via ",(0,o.kt)("inlineCode",{parentName:"p"},"import $ivy")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"using")," directives), re-run the\n",(0,o.kt)("inlineCode",{parentName:"p"},"setup-ide"),' above, and run the command "Metals: Connect to build server".'),(0,o.kt)("h2",{id:"vscode-custom-metals-server"},"VSCode (custom Metals server)"),(0,o.kt)("h3",{id:"setup"},"Setup"),(0,o.kt)("p",null,"This Scala CLI support in Metals / VSCode requires the latest Metals VSCode extension (>= ",(0,o.kt)("inlineCode",{parentName:"p"},"1.10.8"),"). Ensure\nit is installed and up-to-date, or install or update it from the Extension panel in VSCode."),(0,o.kt)("p",null,'This Scala CLI support relies on a custom Metals server for now. To enable it in the current project,\nrun the command "Create New Integrated Terminal (in Active Workspace)", and type'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir -p .vscode\ncat > .vscode/settings.json << EOF\n{\n  "metals.serverVersion": "org.virtuslab:metals_2.12:0.10.5+65-f2a9927c-SNAPSHOT",\n  "metals.serverProperties": [\n    "-Xmx512m",\n    "-Dmetals.scala-cli.launcher=$(which scala-cli)"\n  ]\n}\nEOF\n')),(0,o.kt)("p",null,'A window reload should be needed for this change to be taken into account. If Metals doesn\'t\nsuggest it, run the "Developer: Reload window" command from the command palette.'),(0,o.kt)("h3",{id:"activating-the-scala-cli-support"},"Activating the Scala CLI support"),(0,o.kt)("p",null,"In order for Metals to assume a ",(0,o.kt)("inlineCode",{parentName:"p"},".scala")," or ",(0,o.kt)("inlineCode",{parentName:"p"},".sc")," file is handled by the Scala CLI,\na ",(0,o.kt)("inlineCode",{parentName:"p"},"scala.conf")," file or a file ending in ",(0,o.kt)("inlineCode",{parentName:"p"},".scala.conf")," needs to exist in the same\ndirectory as the ",(0,o.kt)("inlineCode",{parentName:"p"},".scala")," or ",(0,o.kt)("inlineCode",{parentName:"p"},".sc")," files, or in a parent directory of theirs. Beware\nthat it needs to be in the Metals workspace though (so you can't put it at the root\nof your filesystem, for example). This file can be empty."),(0,o.kt)("p",null,"Upon opening a ",(0,o.kt)("inlineCode",{parentName:"p"},".scala")," or ",(0,o.kt)("inlineCode",{parentName:"p"},".sc")," file while ",(0,o.kt)("inlineCode",{parentName:"p"},"scala.conf")," or a ",(0,o.kt)("inlineCode",{parentName:"p"},"*.scala.conf")," file exists,\nMetals should open a dialog offering to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Import Scala CLI projects automatically"),(0,o.kt)("li",{parentName:"ul"},"Import"),(0,o.kt)("li",{parentName:"ul"},"Dismiss")),(0,o.kt)("p",null,"Pick any of the first two options, and enjoy IDE support for your Scala CLI-managed sources!"),(0,o.kt)("p",null,"The following Metals features are expected to work, among others:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"go-to-source"),(0,o.kt)("li",{parentName:"ul"},"diagnostics"),(0,o.kt)("li",{parentName:"ul"},"find usages")),(0,o.kt)("p",null,"Upon adding new dependencies, via ",(0,o.kt)("inlineCode",{parentName:"p"},"scala.conf")," or via ",(0,o.kt)("inlineCode",{parentName:"p"},"import $dep")," in Scala sources, the\nnew dependencies should be automatically downloaded and be available right after in Metals."),(0,o.kt)("h2",{id:"neovim"},"Neovim"),(0,o.kt)("h3",{id:"setup-1"},"Setup"),(0,o.kt)("p",null,"You can get Scala CLI support in Neovim by using\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/scalameta/nvim-metals"},(0,o.kt)("inlineCode",{parentName:"a"},"nvim-metals")),". Scala CLI support\nrelies on a custom Metals server for now. To enable it make sure to set the\n",(0,o.kt)("inlineCode",{parentName:"p"},"g:metals_server_org")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"org.virtuslab"),", and update the\n",(0,o.kt)("inlineCode",{parentName:"p"},"g:metals_server_version")," to the desired version."),(0,o.kt)("p",null,"You'll also need to set a server property to detect the location of ",(0,o.kt)("inlineCode",{parentName:"p"},"scala-cli"),".\nYou can set this in your settings table like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'Metals_config = require("metals").bare_config\n\nMetals_config.settings = {\n  serverProperties = {\n    "-Dmetals.scala-cli.launcher=<location of your installed scala-cli>"\n  }\n}\n')),(0,o.kt)("p",null,"After updating these values make sure to run a ",(0,o.kt)("inlineCode",{parentName:"p"},":MetalsInstall")," command to\ninstall the custom Metals server. You'll then either need to restart the server\nwith a ",(0,o.kt)("inlineCode",{parentName:"p"},":MetalsRestartServer")," or just close the project and reopen."))}u.isMDXComponent=!0}}]);
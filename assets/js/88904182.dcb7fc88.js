"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[596],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(g,i(i({ref:t},p),{},{components:a})):n.createElement(g,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8684:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i={title:"Package Scala application as an executable file",sidebar_position:2},l=void 0,s={unversionedId:"cookbooks/scala-package",id:"cookbooks/scala-package",isDocsHomePage:!1,title:"Package Scala application as an executable file",description:"Scala CLI allows you to package your application into a lightweight JAR file, that can be easily run.",source:"@site/docs/cookbooks/scala-package.md",sourceDirName:"cookbooks",slug:"/cookbooks/scala-package",permalink:"/docs/cookbooks/scala-package",editUrl:"https://github.com/Virtuslab/scala-cli/edit/master/website/docs/cookbooks/scala-package.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Package Scala application as an executable file",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Picking a Scala version with Scala CLI",permalink:"/docs/cookbooks/scala-versions"},next:{title:"Use scala-cli to run Scala Scripts",permalink:"/docs/cookbooks/scala-scripts"}},c=[{value:"Default format (lightweight launcher)",id:"default-format-lightweight-launcher",children:[]},{value:"Assemblies",id:"assemblies",children:[]}],p={toc:c};function u(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Scala CLI allows you to package your application into a lightweight JAR file, that can be easily run.\nIt only contains the byte code of your sources, and automatically downloads its dependencies on its first run."),(0,o.kt)("p",null,"The following snippet contains a short application to detect the OS:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala",metastring:"name:DetectOsApp.scala","name:DetectOsApp.scala":!0},'object DetectOSApp extends App  {\n    def getOperatingSystem(): String = {\n        val os: String = System.getProperty("os.name")\n        os\n    }\n    println(s"os: ${getOperatingSystem()}")\n}\n')),(0,o.kt)("h3",{id:"default-format-lightweight-launcher"},"Default format (lightweight launcher)"),(0,o.kt)("p",null,"By default, the ",(0,o.kt)("inlineCode",{parentName:"p"},"package")," sub-command generates a lightweight JAR."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli package DetectOsApp.scala\n")),(0,o.kt)("p",null,"Lightweight JARs require the ",(0,o.kt)("inlineCode",{parentName:"p"},"java")," command to be available, and access to internet if dependencies need to be downloaded."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Run DetectOsApp on MacOs \n./DetectOsApp\n# os: Mac OS X\n")),(0,o.kt)("p",null,"In the previous example, a Lightweight JAR that was built in a MacOs environment could also run on Linux."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Run DetectOsApp on Linux \n./DetectOsApp\n# os: Linux\n")),(0,o.kt)("p",null,"ScalaCli supports building a Lightweight JARs in MacOS / Linux / Windows environments.\nOnly Jars built on MacOs / Linux are easily portable between this system. The Lightweight JARs built on Windows can only be run on this system."),(0,o.kt)("h3",{id:"assemblies"},"Assemblies"),(0,o.kt)("p",null,"Passing ",(0,o.kt)("inlineCode",{parentName:"p"},"--assembly")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"package"),' sub-command generates so-called "assemblies" or "fat JARs". '),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala-cli"},"scala-cli package --assembly DetectOsApp.scala\n")),(0,o.kt)("p",null,"Assemblies also require the ",(0,o.kt)("inlineCode",{parentName:"p"},"java")," command to be available in the ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),". As all dependencies are packaged into the assembly, nothing gets downloaded upon the first run and no internet access is required."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Run DetectOsApp on MacOs \n./DetectOsApp\n# os: Mac OS X\n")))}u.isMDXComponent=!0}}]);